monitor.asm#1                            
monitor.asm#2                                ;---------------------------------;
monitor.asm#3                                ; a 4ko ROM monitor for vosc6502  ;
monitor.asm#4                                ;---------------------------------;
monitor.asm#5                            
monitor.asm#6                                * = $c000
monitor.asm#7                            
monitor.asm#8                            main
monitor.asm#9                                jmp start
monitor.asm#10                           ;     .include monitor_stuff.asm
monitor_stuff.asm#1                      
monitor_stuff.asm#2                      
monitor_stuff.asm#3                      ;     .include monitor_equates.asm
monitor_equates.asm#1                    
monitor_equates.asm#2                        ; special characters
monitor_equates.asm#3                        CHAR_RETURN = $0a
monitor_equates.asm#4                    
monitor_equates.asm#5                        ;hardware registers
monitor_equates.asm#6                        PUTSCR_REG = $bf00
monitor_equates.asm#7                    
monitor_stuff.asm#4                      
monitor.asm#11                           
monitor.asm#12                           
monitor.asm#13                           start
monitor.asm#14                               ; print "vosc6502...
monitor.asm#15                               ldx #<splash1
monitor.asm#16                               ldy #>splash1
monitor.asm#17                               jsr println
monitor.asm#18                           
monitor.asm#19                               ; print "version ...
monitor.asm#20                               ldx #<splash2
monitor.asm#21                               ldy #>splash2
monitor.asm#22                               jsr println
monitor.asm#23                           
monitor.asm#24                               ; print "start point is
monitor.asm#25                               ldx #<main
monitor.asm#26                               ldy #>main
monitor.asm#27                               jsr print
monitor.asm#28                           
monitor.asm#29                               ; print "start point value
monitor.asm#30                               ldx #<start_mes
monitor.asm#31                               lda #>start_mes
monitor.asm#32                               jsr print16
monitor.asm#33                           
monitor.asm#34                               ; print "stop point is
monitor.asm#35                               ldx #<stop
monitor.asm#36                               ldy #>stop
monitor.asm#37                               jsr print
monitor.asm#38                           
monitor.asm#39                               ; print "start point value
monitor.asm#40                               ldx #<stop_mes
monitor.asm#41                               lda #>stop_mes
monitor.asm#42                               jsr print16
monitor.asm#43                           
monitor.asm#44                           stop
monitor.asm#45                               brk
monitor.asm#46                           
monitor.asm#47                           println
monitor.asm#48                               jsr print
monitor.asm#49                               lda #CHAR_RETURN
monitor.asm#50                               sta PUTSCR_REG
monitor.asm#51                               rts
monitor.asm#52                           
monitor.asm#53                           print
monitor.asm#54                               op1 = 0
monitor.asm#55                               stx op1
monitor.asm#56                               sty op1+1
monitor.asm#57                               ldy #0
monitor.asm#58                           
monitor.asm#59                           print_l1
monitor.asm#60                               lda (op1),y
monitor.asm#61                               cmp #0
monitor.asm#62                               beq print_out
monitor.asm#63                               sta PUTSCR_REG
monitor.asm#64                               iny
monitor.asm#65                               bne print_l1
monitor.asm#66                           
monitor.asm#67                           print_out
monitor.asm#68                               rts
monitor.asm#69                           
monitor.asm#70                           print_nibble
monitor.asm#71                               and #$0f
monitor.asm#72                               tax
monitor.asm#73                               lda hextab, x
monitor.asm#74                               sta PUTSCR_REG
monitor.asm#75                               rts
monitor.asm#76                           
monitor.asm#77                           print_byte
monitor.asm#78                               pha
monitor.asm#79                               lsr
monitor.asm#80                               lsr
monitor.asm#81                               lsr
monitor.asm#82                               lsr
monitor.asm#83                               jsr print_nibble
monitor.asm#84                               pla
monitor.asm#85                               jmp print_nibble
monitor.asm#86                           
monitor.asm#87                           print_word
monitor.asm#88                               pha
monitor.asm#89                               tax
monitor.asm#90                               jsr print_byte
monitor.asm#91                               pla
monitor.asm#92                               jmp print_byte
monitor.asm#93                           
monitor.asm#94                           irq
monitor.asm#95                               pla
monitor.asm#96                               pla
monitor.asm#97                               pla
monitor.asm#98                               brk
monitor.asm#99                           
monitor.asm#100                          nmi
monitor.asm#101                              pla
monitor.asm#102                              pla
monitor.asm#103                              pla
monitor.asm#104                              brk
monitor.asm#105                          
monitor.asm#106                          source_end
monitor.asm#107                          
monitor.asm#108                          splash1
monitor.asm#109                          ;     .string "VOSC6502 (Virtual Old School Computer with a 6502 processor)\n"
monitor.asm#110                          
monitor.asm#111                          splash2
monitor.asm#112                          ;     .string "version 0.99 -------------------------- MMXX - Pierre Faller\n"
monitor.asm#113                          
monitor.asm#114                          start_mes
monitor.asm#115                          ;     .string "start point is "
monitor.asm#116                          
monitor.asm#117                          stop_mes
monitor.asm#118                          ;     .string "stop point is "
monitor.asm#119                          
monitor.asm#120                          hextab ; .StRNeOs ; "0123456789ABCDEF"
monitor.asm#121                          
monitor.asm#122                              * = $fffa ; nmi vector
monitor.asm#123                              .word nmi
monitor.asm#124                          
monitor.asm#125                              * = $fffc ; run vector
monitor.asm#126                              .word main
monitor.asm#127                          
monitor.asm#128                              * = $fffe ; irq vector
monitor.asm#129                              .word irq
monitor.asm#130                          
